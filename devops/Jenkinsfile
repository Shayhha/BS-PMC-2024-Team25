pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:3.9-slim'
                }
            }
            steps {
                sh 'python -m py_compile server/main.py server/test_main.py'
            }
        }
        stage('Start Services') {
            agent {
                docker {
                    image 'docker/compose:debian-1.29.2'  // Docker Compose image
                }
            }
            steps {
                script {
                    // Start services in detached mode
                    sh 'docker-compose -f server/docker-compose.yml up --build -d'

                    // Wait for services to stabilize
                    sh 'sleep 10'

                    // Check the status of the containers
                    sh 'docker-compose -f server/docker-compose.yml ps'

                    // View logs to diagnose startup issues
                    sh 'docker-compose -f server/docker-compose.yml logs'

                    // Verify file structure inside the container
                    sh 'docker-compose -f server/docker-compose.yml exec -T web ls /server'

                    // Run pytest tests inside the running container
                    sh 'docker-compose -f server/docker-compose.yml exec -T web pytest --verbose --junit-xml /test-reports/results.xml test_main.py'
                }
                
            }
            post {
                always {
                    // Stop services after tests
                    sh 'docker-compose -f server/docker-compose.yml down'

                    // Publish test results
                    junit 'test-reports/results.xml'
                }
            }
        }
    }
}